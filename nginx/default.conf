server {
    listen 80;
    server_name ktb.salguworld.store;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name ktb.salguworld.store;

    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    root   /usr/share/nginx/html;
    index  index.html index.htm;

    location / {
        try_files $uri $uri/ /index.html;
    }

    location /users {
        try_files $uri $uri/ /index.html;
    }

    location /boards {
        try_files $uri $uri/ /index.html;
    }

    location /auth {
        try_files $uri $uri/ /index.html;
    }

    location ~* ^/storage/.*\.(gif|jpe?g|png|bmp|ico|webp)$ {
        add_header 'Access-Control-Expose-Headers' '*' always;
        add_header 'Access-Control-Allow-Origin' $allowed_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        if ($request_method = 'OPTIONS') {
           return 204;
        }

        # 캐시 설정
        expires 1d; # 브라우저에 1일동안 리소스 캐시 지시
        access_log off;
        add_header Cache-Control "public, max-age=86400, immutable";

        # 파일이 존재하면 제공하고 없으면 백엔드로 프록시
        try_files $uri $uri/ @storage_server;
    }

    location @storage_server {
        proxy_pass http://ktb-community-storage:8080; # 백엔드 스토리지 서버로 전달
        proxy_http_version 1.1;

        # 프록시 헤더 설정
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; # 백엔드에 요청이 https로 시작되었음을 알림

        # 캐시 설정
        proxy_cache my_cache;          # 캐시 활성화
        proxy_cache_valid 200 302 1d;  # 200, 302 응답을 10분 동안 캐시
        proxy_cache_bypass $http_cache_control;
        proxy_cache_key "$scheme$request_method$host$request_uri";

        # 추가적인 헤더
        add_header X-Cache-Status $upstream_cache_status; # 캐시 상태 확인용 헤더 추가
        add_header 'Access-Control-Allow-Origin' $allowed_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
    }

    location /api/v1/ {
        add_header 'Access-Control-Expose-Headers' '*' always;
        add_header 'Access-Control-Allow-Origin' $allowed_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        if ($request_method = 'OPTIONS') {
           return 204;
        }

        proxy_pass http://ktb-community-be:8000/api/v1/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; # 백엔드에 요청이 https로 시작되었음을 알림
        proxy_cache_bypass $http_upgrade;
        client_max_body_size 10M;              # 업로드 크기 제한 설정
    }
}