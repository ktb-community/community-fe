name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        run: echo ${{ secrets.GHCR_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker buildx build --build-arg VITE_BASE_URL=${{ secrets.VITE_BASE_URL }} --build-arg VITE_API_URL=${{ secrets.VITE_API_URL }} --platform linux/amd64 -t ghcr.io/ktb-community/ktb-community-fe-nginx:latest --push .

  deploy:
    needs: [build-and-push]
    runs-on: ubuntu-latest
    steps:
      - name: Prepare SSH KEY
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" | base64 --decode > key.pem
          chmod 600 key.pem

      - name: SSH into EC2 and pull/run container
        run: |
          HOST=${{ secrets.EC2_HOST }}
          USER=${{ secrets.EC2_USER }}

          ssh -o StrictHostKeyChecking=no -i key.pem $USER@$HOST "docker rm -f ktb-community-fe-nginx || true"
          ssh -o StrictHostKeyChecking=no -i key.pem $USER@$HOST "docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GHCR_PAT }}"
          ssh -o StrictHostKeyChecking=no -i key.pem $USER@$HOST "docker pull ghcr.io/ktb-community/ktb-community-fe-nginx:latest"
          ssh -o StrictHostKeyChecking=no -i key.pem $USER@$HOST "docker run -d -p 80:80 -p 443:443 -e TZ=Asia/Seoul -e VITE_BASE_URL=${{ secrets.VITE_BASE_URL }} -e VITE_API_URL=${{ secrets.VITE_API_URL }} -e VITE_STORAGE_URL=${{ secrets.VITE_STORAGE_URL }} -e VITE_LOGO_TEXT=${{ secrets.VITE_LOGO_TEXT }} -v /home/ubuntu/ssl:/etc/nginx/ssl --name ktb-community-fe-nginx --network ktb-community-overlay ghcr.io/ktb-community/ktb-community-fe-nginx:latest"

  notify:
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Send Discord Notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          curl -H "Content-Type: application/json" \
               -d '{"content": "[FE] 배포가 완료되었습니다."}' \
               $DISCORD_WEBHOOK